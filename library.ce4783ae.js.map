{"mappings":"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","sources":["src/js/api/fetch.js","src/js/home/renderGalleryMarkup.js","src/js/pagination/pagination.js","src/js/plugins/theme-switch.js","src/js/library/local-storage-theme.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=d70849b39c7b399ded2dffef6ee1baa4';\n\nexport function fetchTrending(page) {\n  return fetch(`${BASE_URL}/trending/movie/week?&${API_KEY}&page=${page}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetchGenres() {\n  return fetch(`${BASE_URL}/genre/movie/list?${API_KEY}&language=en-US`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetсhByQuery(query, page) {\n  return fetch(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  )\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetchByID(id) {\n  return fetch(`${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n","const galleryItem = document.querySelector('.gallery__list');\n\nexport function renderGalleryMarkup(results, page) {\n  const markup = results.reduce(\n    (\n      acc,\n      { id, poster_path, name, title, release_date, vote_average, genre_ids }\n    ) => {\n      const currentGenres = [];\n      const genres = JSON.parse(localStorage.getItem('genresData'));\n      genres.forEach(item => {\n        if (genre_ids.includes(item.id)) {\n          currentGenres.push(item.name);\n        }\n      });\n\n      return (\n        acc +\n        `<li class=\"gallery__item\" id=${id} data-trending>\n          <div class=\"gallery__link\">\n              <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${\n          title || name\n        }\" width=\"394\" height =\"335\"/> \n        </div>\n        <div class=\"gallery__info\">\n              <h2 class=\"gallery__title\">${title || name}</h2>\n              <p class=\"gallery__genres\">\n              <span class=\"gallery__genr\"> ${\n                currentGenres.length > 3\n                  ? currentGenres.splice(0, 2).join(', ') + ', Others'\n                  : currentGenres.join(', ')\n              }</span> | \n                  <span class=\"gallery__release\">${\n                    release_date ? release_date.slice(0, 4) : 'no data'\n                  }</span>\n                  <span class=\"gallery__rating\">${vote_average.toFixed(1)}\n              </span>\n              </p>\n          </div>\n        </li>`\n      );\n    },\n    ''\n  );\n  galleryItem.innerHTML = markup;\n  return { results, page };\n}\n\nexport function renderQueryMarkup(results, page) {\n  const markup = results.reduce(\n    (\n      acc,\n      { id, poster_path, name, title, release_date, vote_average, genre_ids }\n    ) => {\n      const currentGenres = [];\n      const genres = JSON.parse(localStorage.getItem('genresData'));\n      genres.forEach(item => {\n        if (genre_ids.includes(item.id)) {\n          currentGenres.push(item.name);\n        }\n      });\n\n      return (\n        acc +\n        `<li class=\"gallery__item\" id=${id} data-query>\n          <div class=\"gallery__link\">\n              <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${\n          title || name\n        }\" width=\"394\" height =\"335\"/> \n        </div>\n        <div class=\"gallery__info\">\n              <h2 class=\"gallery__title\">${title || name}</h2>\n              <p class=\"gallery__genres\">\n              <span class=\"gallery__genr\"> ${\n                currentGenres.length > 3\n                  ? currentGenres.splice(0, 2).join(', ') + ', Others'\n                  : currentGenres.join(', ')\n              }</span> | \n                  <span class=\"gallery__release\">${\n                    release_date ? release_date.slice(0, 4) : 'no data'\n                  }</span>\n                  <span class=\"gallery__rating\">${vote_average.toFixed(1)}\n              </span>\n              </p>\n          </div>\n        </li>`\n      );\n    },\n    ''\n  );\n  galleryItem.innerHTML = markup;\n  return { results, page };\n}\n","export { renderPagination };\nimport { fetchTrending } from '../api/fetch';\nimport { renderGalleryMarkup } from '../home/renderGalleryMarkup';\nimport { renderQueryMarkup } from '../home/renderGalleryMarkup';\nimport { fetсhByQuery } from '../api/fetch';\n\nconst paginationList = document.querySelector('.pagination__list');\nconst btnLeft = document.querySelector('.pagination__btn--left');\nconst btnRight = document.querySelector('.pagination__btn--rigth');\nconst myInput = document.querySelector('.search__input');\nconst myBtns = document.querySelectorAll('.pagination__btn');\nlet query = '';\n\npaginationList.addEventListener('click', onClickMyPagination);\n\nmyBtns.forEach(btn => {\n  btn.addEventListener('click', onClickMyBtn);\n});\n\n// fetchTrending(1).then(({page, results}) => renderPagination(page, results))\n\nfunction renderPagination(page, results, total_pages) {\n  let html = '';\n\n  let [startPageNumber, endPageNumber] = getStartedAndPages(page);\n\n  for (let i = startPageNumber; i <= endPageNumber; i += 1) {\n    html += `\n      <li class =\"pagination__item\" data-page=\"${i}\" >\n        ${i}\n      </li>  \n      \n      `;\n  }\n\n  paginationList.innerHTML = html;\n  btnRight.dataset.page = page + 1;\n  btnLeft.dataset.page = page - 1;\n\n  disabledBtn(page, results);\n  makeActive(page);\n}\n\nfunction onClickMyPagination(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'LI') {\n    return;\n  }\n  let page = e.target.dataset.page;\n  query = myInput.value;\n  if (query !== '') {\n    fetсhByQuery(query, page)\n      .then(({ page, results }) => {\n        renderQueryMarkup(results, page);\n        localStorage.setItem('queryFilms', JSON.stringify(results));\n        return { page, results };\n      })\n      .then(({ page, results }) => renderPagination(page, results));\n    return;\n  }\n  fetchTrending(page)\n    .then(({ page, results }) => {\n      renderGalleryMarkup(results, page);\n      localStorage.setItem('popularFilms', JSON.stringify(results));\n      return { page, results };\n    })\n    .then(({ page, results }) => renderPagination(page, results));\n\n  makeActive(page);\n}\n\nfunction onClickMyBtn(e) {\n  let page = e.currentTarget.dataset.page;\n  console.log(page);\n  query = myInput.value;\n  if (query !== '') {\n    fetсhByQuery(query, page)\n      .then(({ page, results }) => {\n        renderQueryMarkup(results, page);\n        localStorage.setItem('queryFilms', JSON.stringify(results));\n        return { page, results };\n      })\n      .then(({ page, results }) => renderPagination(page, results));\n    return;\n  }\n  fetchTrending(page)\n    .then(({ page, results }) => {\n      renderGalleryMarkup(results, page);\n      localStorage.setItem('popularFilms', JSON.stringify(results));\n      return { page, results };\n    })\n    .then(({ page, results }) => renderPagination(page, results));\n  makeActive(page);\n}\n\nfunction makeActive(page) {\n  const myActiveLink = document.querySelector(\n    '.pagination__item.pagination__item--active'\n  );\n  const myLink = document.querySelector(`[data-page=\"${page}\"]`);\n\n  myLink.classList.add('pagination__item--active');\n\n  if (myActiveLink) {\n    myActiveLink.classList.remove('pagination__item--active');\n  }\n}\n\nfunction getStartedAndPages(page) {\n  if (window.innerWidth >= 320 && page < 3) {\n    var startPageNumber = 1;\n    var endPageNumber = 5;\n  } else {\n    var startPageNumber = page - 2;\n    var endPageNumber = page + 2;\n  }\n  return [startPageNumber, endPageNumber];\n}\n\nfunction disabledBtn(page, results) {\n  if (page === 1) {\n    btnLeft.disabled = true;\n    btnLeft.classList.add('disabled');\n  } else {\n    btnLeft.disabled = false;\n    btnLeft.classList.remove('disabled');\n  }\n  if (results.length < 20) {\n    btnRight.disabled = true;\n  } else {\n    btnRight.disabled = false;\n  }\n}\n","const bodyRef = document.querySelector('body');\nconst toggleRef = document.querySelector('#theme-switch-selector');\nconst footerDarktheme = document.querySelector('.page-footer');\n\ntoggleRef.addEventListener('change', () => {\n  if (bodyRef.classList.contains('dark-theme')) {\n    bodyRef.classList.remove('dark-theme');\n    bodyRef.classList.add('light-theme');\n    footerDarktheme.classList.remove('dark-theme');\n  } else {\n    bodyRef.classList.remove('light-theme');\n    bodyRef.classList.add('dark-theme');\n    footerDarktheme.classList.add('dark-theme');\n  }\n});\n\nexport { bodyRef, toggleRef, footerDarktheme };\n","import { bodyRef, toggleRef, footerDarktheme } from '../plugins/theme-switch';\n\nconst Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\nconst savedTheme = localStorage.getItem('theme');\n\ntoggleRef.addEventListener('change', event => {\n  localStorage.setItem('theme', bodyRef.classList);\n});\n\nupdataTheme();\ncheckboxChecked();\nupdataThemeFooter();\n\nfunction updataTheme() {\n  if (savedTheme) {\n    bodyRef.classList = savedTheme;\n  }\n}\n\nfunction checkboxChecked() {\n  if (savedTheme === 'dark-theme') {\n    toggleRef.setAttribute('checked', true);\n  }\n}\n\nfunction updataThemeFooter() {\n  if (savedTheme === 'dark-theme') {\n    footerDarktheme.classList.add('dark-theme');\n  }\n}\n"],"names":["$d224ab8e9596b250$export$366c886a9138e8db","page","fetch","then","resp","ok","Error","status","json","catch","error","console","log","$d224ab8e9596b250$export$52f71204a7b60fe4","query","$f727f38f9d229487$var$galleryItem","document","querySelector","$f727f38f9d229487$export$49cc6998e897f16d","results","markup","reduce","acc","id","poster_path","name","title","release_date","vote_average","genre_ids","currentGenres","JSON","parse","localStorage","getItem","forEach","item","includes","push","length","splice","join","slice","toFixed","innerHTML","$f727f38f9d229487$export$234a4ae131f01dbc","$6077aa4079e9cd36$var$paginationList","$6077aa4079e9cd36$var$btnLeft","$6077aa4079e9cd36$var$btnRight","$6077aa4079e9cd36$var$myInput","$6077aa4079e9cd36$var$myBtns","querySelectorAll","$6077aa4079e9cd36$var$query","$6077aa4079e9cd36$export$825408fbca4f2040","total_pages","html","startPageNumber","endPageNumber","window","innerWidth","$6077aa4079e9cd36$var$getStartedAndPages","i","dataset","disabled","classList","add","remove","$6077aa4079e9cd36$var$disabledBtn","$6077aa4079e9cd36$var$makeActive","$6077aa4079e9cd36$var$onClickMyBtn","e","page2","currentTarget","value","setItem","stringify","myActiveLink","addEventListener","preventDefault","target","nodeName","page1","btn","$4d40b752319c9afa$export$f7b808395e6f6737","$4d40b752319c9afa$export$92159d73e785afc0","$4d40b752319c9afa$export$6556916451c08288","contains","$dd3675a87ea7e7b0$var$savedTheme","event","setAttribute"],"version":3,"file":"library.ce4783ae.js.map"}