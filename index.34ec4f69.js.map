{"mappings":"YAAA,IAAMA,EAAW,+BACXC,EAAU,2CAwBT,SAASC,EAAaC,EAAOC,GAClC,OAAOC,MACL,GAA4BC,OAAzBN,EAAS,kBAA+CM,OAA/BL,EAAQ,yBAAyDK,OAAlCF,EAAK,+BAAmCE,OAANH,IAE5FI,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,UAEbC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MClChC,IAAMG,EAAcC,SAASC,cAAc,kBAEpC,SAASC,EAAoBC,GAChC,IAAMC,EAASD,EAAIE,QACjB,SACEC,EAAGC,G,IACDC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aAAcC,EAAYN,EAAZM,aAAcC,EAASP,EAATO,UAEtDC,EAAgB,GAOtB,OANeC,KAAKC,MAAMC,aAAaC,QAAQ,eACxCC,SAAQ,SAAAC,GACTP,EAAUQ,SAASD,EAAKb,KAC1BO,EAAcQ,KAAKF,EAAKX,SAI1BJ,EACA,gCAE0ElB,OAF1CoB,EAAG,wIAGjCpB,OADwEqB,EAAY,WAGrDrB,OAF/BuB,GAASD,EACV,8DAEQtB,OADwBuB,GAASD,EAAK,4BAETtB,OAD7B2B,EAAcS,OAAO,EAAET,EAAeU,OAAO,EAAE,GAAGC,KAAK,MAAQ,WAAWX,EAAcW,KAAK,MAAM,wDAEpEtC,OADFwB,EAAae,MAAM,EAAG,GAAG,0DACCvC,OAAxByB,EAAae,QAAQ,GAAG,mDAKpE,IAEF7B,EAAY8B,UAAYzB,EC7B5B,IFD8BlB,EAYrBC,MAAM,GAAgCC,OAA7BN,EAAS,sBAA4BM,OAARL,EAAQ,oBAClDM,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,UAEbC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MEjBlBP,MAAK,SAAAyC,G,OACjBZ,aAAaa,QAAQ,aAAcf,KAAKgB,UAAUF,EAAKG,aFH3B/C,EECnB,EFAFC,MAAM,GAAoCC,OAAjCN,EAAS,0BAAwCM,OAAhBL,EAAQ,UAAaK,OAALF,IAC9DG,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,UAEbC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,OEHZP,MAAK,SAAAyC,G,OAAQ5B,EAAoB4B,EAAKI,YCN1D,IAAMC,EAAYnC,SAASC,cAAc,mBAC1BD,SAASC,cAAc,gBAE/BmC,iBAAiB,UAIxB,SAAwBC,GAGtB,GAFAA,EAAIC,mBACJC,EAAQF,EAAIG,OAAOC,SAAS,GAAGC,OAM7B,OAJAP,EAAUQ,UAAUC,OAAO,wBAC3BC,YAAW,WACTV,EAAUQ,UAAUG,IAAI,qBACvB,KAGL9D,EAAauD,EAbJ,GAaiBlD,MAAK,SAAAyC,GAQ7B5B,EAAoB4B,EAAKI,eArB7B,IACIK,EAAQ,ICPX,WACC,IAAMQ,EAAO,CACXC,aAAchD,SAASC,cAAc,qBACrCgD,cAAejD,SAASC,cAAc,sBACtCiD,MAAOlD,SAASC,cAAc,iBAMhC,SAASkD,IACPJ,EAAKG,MAAMP,UAAUS,OAAO,aAJ9BL,EAAKC,aAAaZ,iBAAiB,QAASe,GAC5CJ,EAAKE,cAAcb,iBAAiB,QAASe,GAR9C,G","sources":["src/js/api/fetch.js","src/js/home/renderGalleryMarkup.js","src/js/home/filmsByPopular.js","src/js/home/searchByQuery.js","src/js/modal/modal-footer.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=d70849b39c7b399ded2dffef6ee1baa4';\n\nexport function fetchTrending(page) {\n  return fetch(`${BASE_URL}/trending/movie/week?&${API_KEY}&page=${page}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetchGenres() {\n  return fetch(`${BASE_URL}/genre/movie/list?${API_KEY}&language=en-US`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetсhByQuery(query, page) {\n  return fetch(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  )\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetchByID(id) {\n  return fetch(`${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n","\nconst galleryItem = document.querySelector('.gallery__list');\n\nexport function renderGalleryMarkup(arr) {\n    const markup = arr.reduce(\n      (\n        acc,\n        { id, poster_path, name, title, release_date, vote_average, genre_ids }\n      ) => {\n        const currentGenres = [];\n        const genres = JSON.parse(localStorage.getItem('genresData'));\n        genres.forEach(item => {\n          if (genre_ids.includes(item.id)) {\n            currentGenres.push(item.name);\n          }\n        });\n        return (\n          acc +\n          `<li class=\"gallery__item\" id=${id}>\n          <a class=\"gallery__link\" href=\"//\">\n              <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${\n            title || name\n          }\" width=\"100\"/>\n              <h2 class=\"gallery__title\">${title || name}</h2>\n              <p>${currentGenres.length>3?(currentGenres.splice(0,2).join(', '))+ ', Others':currentGenres.join(', ')}</p>\n                  <p class=\"gallery__release\">${release_date.slice(0, 4)}</p>\n                  <span class=\"gallery__rating\">${vote_average.toFixed(1)}</span>\n           </a>\n              </li>`\n        );\n      },\n      ''\n    );\n    galleryItem.innerHTML = markup;\n  }","import { fetchTrending } from '../api/fetch';\nimport { fetchGenres } from '../api/fetch';\nimport { renderGalleryMarkup } from './renderGalleryMarkup';\n\nlet page = 1;\nfetchGenres().then(data =>\n  localStorage.setItem('genresData', JSON.stringify(data.genres))\n);\nfetchTrending(page).then(data => renderGalleryMarkup(data.results));\n","import { fetсhByQuery } from '../api/fetch';\nimport { renderGalleryMarkup } from './renderGalleryMarkup';\nconst warningEl = document.querySelector('.warning-notify');\nconst formEl = document.querySelector('#form-search');\n\nformEl.addEventListener('submit', onSearchSubmit);\nlet page = 1;\nlet query = '';\n\nfunction onSearchSubmit(evt) {\n  evt.preventDefault();\n  query = evt.target.elements[0].value;\n  if (!query) {\n    warningEl.classList.remove('visually-hidden');\n    setTimeout(() => {\n      warningEl.classList.add('visually-hidden');\n    }, 5000);\n    return;\n  }\n  fetсhByQuery(query, page).then(data => {\n    // if ((data.results = [])) {\n    //   warningEl.classList.remove('visually-hidden');\n    //   setTimeout(() => {\n    //     warningEl.classList.add('visually-hidden');\n    //   }, 5000);\n    //   return;\n    // }\n    renderGalleryMarkup(data.results);\n  });\n}\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n"],"names":["$4594b7e5ec101adf$var$BASE_URL","$4594b7e5ec101adf$var$API_KEY","$4594b7e5ec101adf$export$52f71204a7b60fe4","query","page","fetch","concat","then","resp","ok","Error","status","json","catch","error","console","log","$116aed76188442a0$var$galleryItem","document","querySelector","$116aed76188442a0$export$49cc6998e897f16d","arr","markup","reduce","acc","param","id","poster_path","name","title","release_date","vote_average","genre_ids","currentGenres","JSON","parse","localStorage","getItem","forEach","item","includes","push","length","splice","join","slice","toFixed","innerHTML","data","setItem","stringify","genres","results","$dcd5317c0786462c$var$warningEl","addEventListener","evt","preventDefault","$dcd5317c0786462c$var$query","target","elements","value","classList","remove","setTimeout","add","refs","openModalBtn","closeModalBtn","modal","toggleModal","toggle"],"version":3,"file":"index.34ec4f69.js.map"}