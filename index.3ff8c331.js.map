{"mappings":"YAAA,IAAMA,EAAW,+BACXC,EAAU,2CCAMC,SAASC,cAAc,mBCD5C,WACC,IAAMC,EAAO,CACXC,aAAcH,SAASC,cAAc,qBACrCG,cAAeJ,SAASC,cAAc,sBACtCI,MAAOL,SAASC,cAAc,iBAMhC,SAASK,IACPJ,EAAKG,MAAME,UAAUC,OAAO,aAJ9BN,EAAKC,aAAaM,iBAAiB,QAASH,GAC5CJ,EAAKE,cAAcK,iBAAiB,QAASH,GAR9C,GCCD,IAAMI,EAAcV,SAASC,cAAc,kBAIpC,SAASU,EAAcC,GAC5B,IAAMC,EAASD,EAAIE,QACjB,SACEC,EAAGC,G,IACDC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aAAcC,EAAYN,EAAZM,aAAcC,EAASP,EAATO,UAEtDC,EAAgB,GAQtB,OAPeC,KAAKC,MAAMC,aAAaC,QAAS,eACzCC,SAAQ,SAAAC,GACTP,EAAUQ,SAASD,EAAKb,KAC1BO,EAAcQ,KAAKF,EAAKX,SAK1BJ,EACA,gCAC0EkB,OAD1ChB,EAAG,uFAEjCgB,OADwEf,EAAY,WAGrDe,OAF/Bb,GAASD,EACV,4DAEQc,OADwBb,GAASD,EAAK,0BAETc,OAD7BT,EAAcU,KAAK,KAAK,sDAEOD,OADFZ,EAAac,MAAM,EAAG,GAAG,wDACCF,OAAxBX,EAAac,QAAQ,GAAG,gCAIpE,IAEF1B,EAAY2B,UAAYxB,GH/BnB,W,IAAuByB,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EACnC,OAAOE,MAAM,GAAoCR,OAAjCnC,EAAS,0BAAwCmC,OAAhBlC,EAAQ,UAAakC,OAALK,IAC9DI,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,UAEbC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,OGRhC,CAAc,GAAGP,MAAK,SAAAU,G,OAAQzC,EAAcyC,EAAKC,YCAjDH,QAAQC,IAAIxC,G","sources":["src/js/api/fetch.js","src/js/home/parseTrending.js","src/js/modal/modal-footer.js","src/js/api/filmsByPopular.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=d70849b39c7b399ded2dffef6ee1baa4';\n\nexport function fetchTrending(page = 1) {\n  return fetch(`${BASE_URL}/trending/movie/week?&${API_KEY}&page=${page}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetchGenres() {\n  fetch(`${BASE_URL}/genre/movie/list?${API_KEY}&language=en-US`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fethByQuery(query, page) {\n  return fetch(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  )\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport function fetchByID(id) {\n  return fetch(`${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.status);\n      }\n      return resp.json();\n    })\n    .catch(error => console.log(error));\n}\n","import { fetchTrending } from '../api/fetch';\nconst galleryListEl = document.querySelector('.gallery__list');\n\n// let page;\n// fetchTrending(page).then(data => createMarkup(data));\n\n// function createMarkup(data) {\n//   console.log(data.results);\n//   galleryListEl.innerHTML = parseGallery(data.results);\n// }\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n","import { fetchTrending } from './fetch';\nconst galleryItem = document.querySelector('.gallery__list');\n\nfetchTrending(1).then(data => filmByPopular(data.results));\n\nexport function filmByPopular(arr) {\n  const markup = arr.reduce(\n    (\n      acc,\n      { id, poster_path, name, title, release_date, vote_average, genre_ids }\n    ) => {\n      const currentGenres = [];\n      const genres = JSON.parse(localStorage.getItem(`genresList`));\n      genres.forEach(elem => {\n        if (genre_ids.includes(elem.id)) {\n          currentGenres.push(elem.name);\n        }\n      });\n\n      return (\n        acc +\n        `<li class=\"gallery__item\" id=${id}>\n            <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${\n          title || name\n        }\" width=\"100\"/>\n            <h2 class=\"gallery__title\">${title || name}</h2>\n            <p>${currentGenres.join(',')}</p>\n                <p class=\"gallery__release\">${release_date.slice(0, 4)}</p>\n                <span class=\"gallery__rating\">${vote_average.toFixed(1)}</span>\n            </li>`\n      );\n    },\n    ''\n  );\n  galleryItem.innerHTML = markup;\n}\n","import './js/home/parseTrending';\nimport './js/modal/modal-footer';\nimport {filmByPopular} from \"./js/api/filmsByPopular\";\nconsole.log(filmByPopular)\n"],"names":["$4594b7e5ec101adf$var$BASE_URL","$4594b7e5ec101adf$var$API_KEY","document","querySelector","refs","openModalBtn","closeModalBtn","modal","toggleModal","classList","toggle","addEventListener","$af2b674235f69165$var$galleryItem","$af2b674235f69165$export$88a6a4bc33b95cc3","arr","markup","reduce","acc","param","id","poster_path","name","title","release_date","vote_average","genre_ids","currentGenres","JSON","parse","localStorage","getItem","forEach","elem","includes","push","concat","join","slice","toFixed","innerHTML","page","arguments","length","fetch","then","resp","ok","Error","status","json","catch","error","console","log","data","results"],"version":3,"file":"index.3ff8c331.js.map"}